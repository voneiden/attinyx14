{"version":3,"sources":["components/pin-row.js","utils/cls.js","store.js","components/pin-attribute.js","components/chip-leg.js","components/chip-topic.js","views/chip-view.js","components/registry-link.js","components/registry-offset.js","components/registry-offsets.js","components/datasheet-link.js","components/registry.js","components/topic-link.js","views/topic-view.js","App.js","serviceWorker.js","index.js","config/attinyx14-pins.toml","config/attinyx14-topics.toml","config/attinyx14-registries.toml"],"names":["PinRow","props","pin","children","className","cls","args","filter","arg","join","PinAttributeModel","types","model","type","string","label","alt","optional","boolean","groups","array","PinModel","number","attributes","TopicModel","topic","title","text","chip","FieldModel","name","maybeNull","size","description","relatedGroups","OffsetModel","fields","RegistryModel","datasheetPage","offsets","store","topics","registries","pins","highlightGroups","datasheetUrl","actions","self","setTopics","setRegistries","setPins","setHighlightGroups","views","length","slice","getTopic","find","t","getRegistry","registryName","r","getRegistryDatasheetLink","registry","getDatasheetPageLink","page","create","PinAttribute","observer","attribute","params","useParams","activeGroup","activePin","parseInt","pinPrimaryGroup","pinActive","pinInActiveGroup","includes","pinInactive","pinPrimaryHighlight","primaryHighlightGroup","pinSecondaryHighlight","secondaryHighlightGroups","g","to","onMouseEnter","getSnapshot","onMouseLeave","onClick","e","stopPropagation","ChipLeg","ChipTopic","active","inactive","withRouter","pinsPerSide","leftPins","map","a","i","key","reverse","rightPins","chipTopics","history","push","RegistryLink","offset","field","RegistryOffset","fieldInt","bits","fieldNameBlocks","fieldObj","disabled","range","rows","Array","keys","bit","block","RegistryOffsets","Fragment","DatasheetLink","link","href","target","rel","Registry","o","linkElement","TopicLink","topicObj","md","MarkdownIt","highlight","str","lang","hljs","value","__","html","TopicView","formatted","references","render","jsx","ReactHtmlParser","transform","node","index","data","split","attribs","convertNodeToElement","formatText","httpGet","theUrl","xmlHttp","XMLHttpRequest","open","send","responseText","attinyx14pins","attinyx14pinsPath","attinyx14topics","attinyx14topicsPath","attinyx14registries","attinyx14registriesPath","toml","regs","App","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.d361c85e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PinRow = function PinRow(props) {\r\n    const {pin, children} = props;\r\n    return (\r\n        <div className={`pin-row pin-${pin.pin}`}>\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\nPinRow.propTypes = {\r\n    children: PropTypes.arrayOf(PropTypes.node),\r\n    pin: PropTypes.object.isRequired,\r\n};\r\nexport default PinRow;","const cls = function cls(...args) {\r\n    return args.filter(arg => arg).join(' ')\r\n};\r\n\r\nexport default cls;","import { types } from \"mobx-state-tree\";\r\n\r\n\r\nconst PinAttributeModel = types.model({\r\n    type: types.string,\r\n    label: types.string,\r\n    alt: types.optional(types.boolean, false),\r\n    groups: types.array(types.string),\r\n});\r\n\r\nconst PinModel = types.model({\r\n    pin: types.number,\r\n    attributes: types.array(PinAttributeModel),\r\n});\r\n\r\nconst TopicModel = types.model( {\r\n    topic: types.string,\r\n    title: types.string,\r\n    text: types.string,\r\n    chip: types.optional(types.boolean, false)\r\n});\r\n\r\nconst FieldModel = types.model({\r\n    name: types.maybeNull(types.string),\r\n    size: types.optional(types.number, 1),\r\n    description: types.maybeNull(types.string),\r\n    relatedGroups: types.array(types.string),\r\n});\r\n\r\nconst OffsetModel = types.model({\r\n    name: types.string,\r\n    fields: types.array(FieldModel)\r\n});\r\n\r\nconst RegistryModel = types.model({\r\n    name: types.string,\r\n    datasheetPage: types.maybeNull(types.number),\r\n    offsets: types.array(OffsetModel)\r\n});\r\n\r\nconst Store = types.model({\r\n    topics: types.array(TopicModel),\r\n    registries: types.array(RegistryModel),\r\n    pins: types.array(PinModel),\r\n    highlightGroups: types.array(types.string),\r\n    datasheetUrl: types.optional(types.string, \"http://ww1.microchip.com/downloads/en/DeviceDoc/ATtiny214-414-814-DataSheet-DS40001912C.pdf\")\r\n\r\n}).actions(self => ({\r\n    setTopics(topics) {\r\n        self.topics = topics;\r\n    },\r\n    setRegistries(registries) {\r\n        self.registries = registries;\r\n    },\r\n    setPins(pins) {\r\n        self.pins = pins;\r\n    },\r\n    setHighlightGroups(highlightGroups) {\r\n        if (highlightGroups !== self.highlightGroups) {\r\n            self.highlightGroups = highlightGroups ? highlightGroups : []\r\n        }\r\n    },\r\n})).views(self => ({\r\n    get primaryHighlightGroup() {\r\n        return self.highlightGroups.length ? self.highlightGroups[0] : null\r\n    },\r\n    get secondaryHighlightGroups() {\r\n        return self.highlightGroups.slice(1)\r\n    },\r\n    getTopic(topic) {\r\n        return self.topics.find((t) => t.topic === topic)\r\n    },\r\n    getRegistry(registryName) {\r\n        return self.registries.find((r) => r.name === registryName)\r\n    },\r\n    getRegistryDatasheetLink(registry) {\r\n        return self.getDatasheetPageLink(registry.datasheetPage)\r\n    },\r\n     getDatasheetPageLink(page) {\r\n        return page ? `${self.datasheetUrl}#page=${page}` : null\r\n    },\r\n    get chipTopics() {\r\n        return self.topics.filter(t => t.chip)\r\n    }\r\n\r\n}));\r\n\r\nconst store = Store.create();\r\nexport default store","import React from \"react\";\r\nimport \"./pin-attribute.scss\";\r\nimport cls from \"../utils/cls\";\r\nimport store from \"../store\";\r\nimport { observer } from 'mobx-react'\r\nimport {getSnapshot} from \"mobx-state-tree\";\r\nimport {useParams} from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst PinAttribute = observer(function PinAttribute(props) {\r\n    const { pin, attribute } = props;\r\n    const { label, type, alt, groups } = attribute;\r\n    const params = useParams();\r\n    const activeGroup = params.activeGroup;\r\n    const activePin = parseInt(params.activePin);\r\n    const pinPrimaryGroup = groups.length ? groups[0] : null;\r\n\r\n    const pinActive = activePin && activePin === pin.pin;\r\n    const pinInActiveGroup = groups.includes(activeGroup);\r\n    const pinInactive =  activeGroup && !pinInActiveGroup;\r\n    const pinPrimaryHighlight =  groups.includes(store.primaryHighlightGroup);\r\n    const pinSecondaryHighlight = !pinPrimaryHighlight && store.secondaryHighlightGroups.filter((g) => groups.includes(g)).length;\r\n    return (\r\n        <Link to={`/topic/${pinPrimaryGroup}/${pin.pin}`} className={\r\n            cls(\r\n                `pin-attribute`,\r\n                `${type}-pin`,\r\n                alt && `alt-pin`,\r\n                pinPrimaryHighlight && `highlight-primary-pin`,\r\n                pinSecondaryHighlight && `highlight-secondary-pin`,\r\n                pinActive && `active-pin`,\r\n                pinInActiveGroup && `active-group`,\r\n                pinInactive && `inactive-group`,\r\n                )}\r\n             onMouseEnter={() => store.setHighlightGroups(getSnapshot(groups))}\r\n             onMouseLeave={() => store.setHighlightGroups([])}\r\n             onClick={(e) => {\r\n                 //store.setActivePinAndGroup(pin.pin);\r\n                 e.stopPropagation()}\r\n             }\r\n        >\r\n            { label }\r\n        </Link>\r\n    )\r\n})\r\n\r\nexport default PinAttribute;","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport \"./chip-leg.scss\"\r\n\r\nconst ChipLeg = function ChipLeg(props) {\r\n    const {pin} = props;\r\n    return <div className=\"chip-leg\"><span className=\"pin-number\">{pin}</span></div>\r\n};\r\nChipLeg.propTypes = {\r\n    pin: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ChipLeg;","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport \"./chip-leg.scss\"\r\nimport cls from \"../utils/cls\"\r\nimport store from \"../store\"\r\nimport \"./chip-topic.scss\"\r\nimport {observer} from \"mobx-react\";\r\nimport {useParams} from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ChipTopic = observer(function ChipTopic(props) {\r\n    const {topic} = props;\r\n    const {activeGroup} = useParams();\r\n    const active = activeGroup === topic;\r\n    const inactive = activeGroup && !active;\r\n\r\n    return (\r\n        <Link to={`/topic/${topic}`} className={\r\n            cls(\r\n                `chip-topic`,\r\n                active && `active-topic`,\r\n                inactive && `inactive-topic`,\r\n            )}\r\n             onMouseEnter={() => store.setHighlightGroups([topic])}\r\n             onMouseLeave={() => store.setHighlightGroups([])}\r\n             onClick={(e) => {\r\n                 //store.setActivePinAndGroup(null);\r\n                 e.stopPropagation()\r\n             }\r\n             }\r\n        >\r\n            {topic}\r\n        </Link>\r\n    )\r\n});\r\nChipTopic.propTypes = {\r\n    topic: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ChipTopic;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PinRow from \"../components/pin-row\";\r\nimport PinAttribute from \"../components/pin-attribute\";\r\nimport store from \"../store\";\r\nimport ChipLeg from \"../components/chip-leg\";\r\nimport ChipTopic from \"../components/chip-topic\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nconst ChipView = function ChipView(props) {\r\n    const { pins } = store;\r\n    const pinsPerSide = pins.length / 2;\r\n    const leftPins = pins.slice(0, pinsPerSide).map(pin => {\r\n        const attributes = pin.attributes.map((a, i) => {\r\n            return <PinAttribute key={`attr-${i}`} attribute={a} pin={pin}/>\r\n        });\r\n        attributes.reverse();\r\n        return (\r\n            <PinRow pin={pin} key={`pin-${pin.pin}`}>\r\n                {attributes}\r\n                <ChipLeg pin={pin.pin}/>\r\n            </PinRow>\r\n        )\r\n    });\r\n    const rightPins = pins.slice(pinsPerSide, pins.length).map(pin => {\r\n        const attributes = pin.attributes.map((a, i) => {\r\n            return <PinAttribute key={i} attribute={a} pin={pin}/>\r\n        });\r\n        return (\r\n            <PinRow pin={pin} key={`pin-${pin.pin}`}>\r\n                <ChipLeg pin={pin.pin}/>\r\n                {attributes}\r\n            </PinRow>\r\n        )\r\n    });\r\n\r\n    const chipTopics = store.chipTopics.map(topic => {\r\n        return <ChipTopic key={topic.topic} topic={topic.topic}/>\r\n    });\r\n\r\n    const { history } = props;\r\n\r\n    return (\r\n        <div className=\"model-row\" onClick={() => history.push(\"/\")}>\r\n            <div className=\"model-row--left-column\">\r\n                {leftPins}\r\n            </div>\r\n            <div className=\"model-row--middle-column\">\r\n                <div className=\"attiny\">\r\n                    <div className=\"pin1marker\"/>\r\n                    { chipTopics }\r\n                </div>\r\n            </div>\r\n            <div className=\"model-row--right-column\">\r\n                {rightPins}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nChipView.propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n};\r\nexport default withRouter(ChipView);","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst RegistryLink = function RegistryLink(props) {\r\n    const {registry, offset, field} = props;\r\n\r\n    const text = offset ? `${registry}.${offset}` : `${registry}`;\r\n\r\n    return (\r\n        <a>\r\n            { text }\r\n        </a>\r\n    )\r\n};\r\nRegistryLink.propTypes = {\r\n    registry: PropTypes.string.isRequired,\r\n    offset: PropTypes.string,\r\n    field: PropTypes.string,\r\n};\r\nexport default RegistryLink;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./registry-offset.scss\";\r\nimport cls from \"../utils/cls\";\r\nimport {useParams} from \"react-router\";\r\n\r\nconst RegistryOffset = function RegistryOffset(props) {\r\n    const {offset, field} = props;\r\n    const fieldInt = parseInt(field);\r\n    let bits = 0;\r\n    const {activeGroup} = useParams();\r\n\r\n    const fieldNameBlocks = offset.fields.map((fieldObj, i) => {\r\n        bits += fieldObj.size;\r\n        const active = fieldObj.relatedGroups.includes(activeGroup) || field === fieldObj.name;\r\n        const disabled = !fieldObj.name;\r\n        const range = fieldObj.size > 1 && !disabled ? `[${i + fieldObj.size - 1}:${i}]` : null;\r\n        const name = fieldObj.name ? `${fieldObj.name}${range}` : '';\r\n        return (\r\n            <div className={cls(\r\n                `field-size-${fieldObj.size}`,\r\n                active && `active`,\r\n                disabled && `disabled`,\r\n            )}\r\n                 key={name}\r\n            >\r\n                {name}\r\n            </div>\r\n        )\r\n    }).reverse();\r\n\r\n    const bitBlocks = [...Array(bits).keys()].map(bit => {\r\n        return (\r\n            <div className={cls(\r\n                `field-size-1`,\r\n                `bit-number`,\r\n                fieldInt === bit && `active`\r\n            )}\r\n                 key={`bit-${bit}`}\r\n            >\r\n                {bit}\r\n            </div>\r\n        )\r\n    }).reverse();\r\n\r\n    const rows = [bitBlocks, fieldNameBlocks].map((block, i) => {\r\n        return (\r\n            <div key={`block-${i}`} className=\"block-row\">{block}</div>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <div className='registry-offset offset-fields'>\r\n            {rows}\r\n        </div>\r\n    )\r\n};\r\n\r\nRegistryOffset.propTypes = {\r\n    offset: PropTypes.object.isRequired,\r\n};\r\nexport default RegistryOffset;","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport \"./chip-leg.scss\"\r\nimport \"./chip-topic.scss\"\r\nimport {observer} from \"mobx-react\";\r\nimport RegistryOffset from \"./registry-offset\";\r\n\r\nconst RegistryOffsets = observer(function RegistryOffsets(props) {\r\n    const {registry} = props;\r\n    const offsets = registry.offsets.map((offset, i) => {\r\n        const title = offset ? `${registry.name}.${offset.name}` : registry.name;\r\n        return (\r\n            <React.Fragment key={i}>\r\n                <span className=\"title\">{title}</span>\r\n                <RegistryOffset offset={offset}/>\r\n            </React.Fragment>\r\n\r\n        )\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {offsets}\r\n        </React.Fragment>\r\n    )\r\n});\r\nRegistryOffsets.propTypes = {\r\n    registry: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default RegistryOffsets;","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport store from \"../store\"\r\nimport \"./chip-topic.scss\"\r\n\r\nconst DatasheetLink = function DatasheetLink(props) {\r\n    const {registry, page} = props;\r\n    const link = registry ? store.getRegistryDatasheetLink(registry) : store.getDatasheetPageLink(page);\r\n    return link ? <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">🗎</a> : <span>(??? link ???)</span>;\r\n};\r\nDatasheetLink.propTypes = {\r\n    registry: PropTypes.object,\r\n    page: PropTypes.number\r\n};\r\n\r\nexport default DatasheetLink;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport store from \"../store\"\r\nimport RegistryOffset from \"./registry-offset\";\r\nimport \"./registry.scss\"\r\nimport RegistryOffsets from \"./registry-offsets\";\r\nimport DatasheetLink from \"./datasheet-link\";\r\n\r\nconst Registry = function Registry(props) {\r\n    const registry = store.getRegistry(props.registry);\r\n    if (!registry) {\r\n        return <div>Registry definition for '{props.registry}' is missing</div>\r\n    }\r\n\r\n\r\n    const offset = registry.offsets.find(o => o.name === props.offset);\r\n    const { field } = props;\r\n    const title = offset ? `${registry.name} > ${offset.name}` : registry.name;\r\n    const linkElement = <DatasheetLink registry={registry}/>;\r\n    if (!props.offset) {\r\n        return (\r\n            <div className=\"registry\">\r\n                <div>\r\n                    <span className=\"title\">{title} {linkElement}</span>\r\n                    <RegistryOffsets registry={registry}/>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"registry\">\r\n            <div>\r\n                <span className=\"title\">{title} {linkElement}</span>\r\n                {offset && <RegistryOffset offset={offset} field={field}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nRegistry.propTypes = {\r\n    registry: PropTypes.string.isRequired,\r\n    offset: PropTypes.string,\r\n    field: PropTypes.string,\r\n};\r\nexport default Registry;","import store from \"../store\"\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst TopicLink = function TopicLink(props) {\r\n    const {topic} = props;\r\n    const topicObj = store.getTopic(topic);\r\n    return topicObj ? (\r\n        <Link className=\"topic-link\" to={`/topic/${topic}`}>\r\n            {topicObj.title}\r\n        </Link>\r\n    ) : (\r\n        <span>{`\"${topic}\" (topic missing)`}</span>\r\n    )\r\n};\r\n\r\nTopicLink.propTypes = {\r\n    topic: PropTypes.string.isRequired\r\n};\r\n\r\nexport default TopicLink;","import React from \"react\";\r\nimport store from \"../store\"\r\nimport \"./topic-view.scss\"\r\nimport {observer} from \"mobx-react\";\r\nimport RegistryLink from \"../components/registry-link\";\r\nimport Registry from \"../components/registry\";\r\nimport DatasheetLink from \"../components/datasheet-link\";\r\nimport MarkdownIt from 'markdown-it';\r\nimport * as hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/dracula.css\";\r\nimport ReactHtmlParser, {convertNodeToElement} from 'react-html-parser';\r\nimport TopicLink from \"../components/topic-link\";\r\nimport {useParams} from \"react-router\";\r\n\r\nconst md = new MarkdownIt({\r\n  highlight: function (str, lang) {\r\n    if (lang && hljs.getLanguage(lang)) {\r\n      try {\r\n        return hljs.highlight(lang, str).value;\r\n      } catch (__) {\r\n      }\r\n    }\r\n    return ''; // use external default escaping\r\n  },\r\n  html: true,\r\n});\r\n\r\n\r\n\r\nconst formatText = function formatText(text) {\r\n  const references = [];\r\n  const transform = function transform(node, index) {\r\n    if (node && node.name === 'reg') {\r\n      const [registry, offset, field] = node.children[0].data.split(\".\");\r\n      references.push(<Registry key={`registry-${registry}-${offset}-${field}`} registry={registry} offset={offset} field={field}/>);\r\n      return <RegistryLink registry={registry} offset={offset} field={field}/>;\r\n    } else if (node && node.name === 'ref') {\r\n      return <DatasheetLink page={node.children[0].data}/>\r\n    } else if (node && node.name === 'topic') {\r\n      return <TopicLink topic={node.children[0].data}/>\r\n    } else if (node && node.name === 'example') {\r\n      node.name = 'div';\r\n      node.attribs = {\r\n        'class': 'code-example',\r\n      };\r\n      return convertNodeToElement(node, index, transform);\r\n    }\r\n    return undefined\r\n  };\r\n  const html = md.render(text);\r\n  const jsx = ReactHtmlParser(html, {transform: transform});\r\n  return (\r\n    <React.Fragment>\r\n      {jsx}\r\n      <div className=\"references\">\r\n        {references}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst TopicView = observer(function TopicView(props) {\r\n  const {activeGroup} = useParams();\r\n  let formatted = null;\r\n  if (activeGroup) {\r\n    const topic = store.getTopic(activeGroup);\r\n    formatted = topic ? (\r\n      <React.Fragment>\r\n        <h3>{topic.title}</h3>\r\n        <div className=\"topic-text\">{formatText(topic.text)}</div>\r\n      </React.Fragment>\r\n    ) : <span>Topic '{activeGroup}' not found</span>\r\n  }\r\n  if (!formatted) {\r\n    const primaryHighlightGroup = store.primaryHighlightGroup;\r\n    const topic = store.getTopic(primaryHighlightGroup);\r\n    formatted = topic ? <h3>{topic.title}</h3> : null;\r\n  }\r\n  return (\r\n    <div\r\n      className=\"topic-view\"\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <div>\r\n        {formatted}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default TopicView;\r\n","import React from 'react';\nimport attinyx14pinsPath from './config/attinyx14-pins.toml';\nimport attinyx14topicsPath from './config/attinyx14-topics.toml';\nimport attinyx14registriesPath from './config/attinyx14-registries.toml';\nimport './App.scss';\nimport * as toml from \"toml\";\nimport ChipView from \"./views/chip-view\";\nimport store from './store';\nimport TopicView from \"./views/topic-view\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Route, Switch} from \"react-router\";\n\nfunction httpGet(theUrl)\n{\n\tlet xmlHttp = new XMLHttpRequest();\n\txmlHttp.open( \"GET\", theUrl, false ); // false for synchronous request\n\txmlHttp.send( null );\n\treturn xmlHttp.responseText;\n}\nconst attinyx14pins = httpGet(attinyx14pinsPath);\nconst attinyx14topics = httpGet(attinyx14topicsPath);\nconst attinyx14registries = httpGet(attinyx14registriesPath);\n\nstore.setPins(toml.parse(attinyx14pins).pins);\nstore.setTopics(toml.parse(attinyx14topics).topics);\nstore.setRegistries(toml.parse(attinyx14registries).regs);\n\nfunction App() {\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <h1>ATtinyX14 Quick Reference</h1>\n                <Switch>\n                    <Route path=\"/topic/:activeGroup?/:activePin?\">\n                        <ChipView/>\n                        <TopicView/>\n                    </Route>\n                    <Route path=\"/\">\n                        <ChipView/>\n                        <TopicView/>\n                    </Route>\n                </Switch>\n                <div className=\"data-row\">\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/attinyx14-pins.febae19a.toml\";","module.exports = __webpack_public_path__ + \"static/media/attinyx14-topics.4cf4d200.toml\";","module.exports = __webpack_public_path__ + \"static/media/attinyx14-registries.53cdde4c.toml\";"],"sourceRoot":""}